//top.v

module top(
	input wire [17:0]SW,
	input wire [3:0]KEY,
	input wire CLOCK_50,
	
	output wire [6:0]HEX0,
	output wire [6:0]HEX1,
	output wire [6:0]HEX2,
	output wire [6:0]HEX3,
	output wire [6:0]HEX4,
	output wire [6:0]HEX5,
	output wire [6:0]HEX6,
	output wire [6:0]HEX7,
	
	output wire LCD_ON,
	output wire LCD_BLON,
	output reg [7:0]LCD_DATA,
	output wire LCD_RW,
	output wire LCD_RS,
	output wire LCD_EN
	);
	
	integer one_hz;
	integer hundred_hz;
	integer CLOCK;
	
	assign LCD_ON = 1'b1;
	assign LCD_BLON = 1'b1;
	
	wire [31:0] reg_debug_data;
	
	clk_div(
		CLOCK_50,
		,
		,
		,
		,
		hundred_hz,
		,
		one_hz);
		
		always begin
			if(SW[17] == 1'b0) begin
				CLOCK = KEY[1];
			end else begin
				CLOCK = one_hz;
			end
		end
		
		reg_file(
		CLOCK,			//clock
		KEY[0], 			//reset 
		, 					//write enable
		, 					//clock_debug
		, 					//read_address_1
		, 					//read_address_2
		, 					//write_address
		SW[4:0],  		//read_address_debug
		,					//write_data_in
		, 					//data_out_1
		,					//data_out_2
		reg_debug_data //data_out_debug 
		);
		
		CLK_CNT(
		CLOCK,			//clock
		KEY[0],			//reset
		HEX0[6:0],		//hex digit 0
		HEX1[6:0],		//hex digit 1
		HEX2[6:0],		//hex digit 2
		HEX3[6:0]		//hex digit 3
		);
		
		LCD_Display(
		1'b1,
		reg_debug_data,
		LCD_RS,
		LCD_EN,
		LCD_RW,
		LCD_DATA[7:0]
		);
		
		hexdigit(reg_debug_data[3:0], HEX6[6:0]);
		hexdigit(reg_debug_data[7:4], HEX7[6:0]);
		
	endmodule
	